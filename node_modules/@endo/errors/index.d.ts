/** @type {import("ses").AssertionFunctions } */
export const assert: import("ses").AssertionFunctions;
declare const bareOrQuote: (payload: any, spaces?: string | number) => import("ses").StringablePayload;
export const makeError: (details?: Details, errConstructor?: GenericErrorConstructor, options?: AssertMakeErrorOptions) => Error;
export const note: (error: Error, details: Details) => void;
export const quote: (payload: any, spaces?: string | number) => import("ses").StringablePayload;
export const redacted: (template: TemplateStringsArray | string[], ...args: any) => import("ses").DetailsToken;
export const throwRedacted: (template: TemplateStringsArray | string[], ...args: any) => never;
import type { Details } from 'ses';
import type { GenericErrorConstructor } from 'ses';
import type { AssertMakeErrorOptions } from 'ses';
export { bareOrQuote as bare, bareOrQuote as b, quote as q, redacted as X, throwRedacted as Fail, note as annotateError };
//# sourceMappingURL=index.d.ts.map